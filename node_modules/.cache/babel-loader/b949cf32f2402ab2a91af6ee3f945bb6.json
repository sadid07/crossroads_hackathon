{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { endpoint, endpointauth } from \"../../constants\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(`${endpointauth}/auth/login/`, {\n      email: email,\n      password: password\n    }).then(res => {\n      const token = res.data.tokens.access;\n      console.log(res);\n      console.log(token);\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password, password2, props) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(`${endpointauth}/auth/register/`, {\n      username: username,\n      email: email,\n      password: password,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      console.log(res, '................res');\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600)); // props.history.push('/login');\n\n      console.log(props, ',,,,,,,,,,,,,,,,,,props'); // window.location.reload()\n\n      setInterval(function () {\n        window.location.reload(); // window.location.replace(\"https://google.com\")\n\n        window.location.href = \"https://google.com\";\n      }, 1000);\n      window.location.replace(\"https://google.com\");\n    }).catch(err => {\n      dispatch(authFail(err.response)); // console.log(err.response)\n      // var data = err.response.data\n      // if (((Object.values(data).length)== 1)) {\n      //   dispatch(authFail(err.response.data));\n      // } else {\n      //   console.log('is not empty ')\n      // }\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/kawsar/incomeexpensesapi-master/orbitplugbackend/src/store/actions/auth.js"],"names":["axios","actionTypes","endpoint","endpointauth","NavLink","Redirect","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","email","password","post","then","res","data","tokens","access","console","log","expirationDate","Date","getTime","setItem","catch","err","authSignup","username","password2","props","key","setInterval","window","location","reload","href","replace","response","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { endpoint, endpointauth } from \"../../constants\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${endpointauth}/auth/login/`, {\n        email: email,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.tokens.access;\n        console.log((res));\n        console.log((token));\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password, password2,props) => {\n\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${endpointauth}/auth/register/`, {\n        username: username,\n        email: email,\n        password: password,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        console.log(res,'................res')\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n          // props.history.push('/login');\n          console.log(props,',,,,,,,,,,,,,,,,,,props')\n\n        // window.location.reload()\n        setInterval(function () {\n          window.location.reload();\n\n          // window.location.replace(\"https://google.com\")\n          window.location.href = \"https://google.com\"\n\n        }, 1000);\n        window.location.replace(\"https://google.com\")\n    \n\n\n       \n\n      })\n      .catch(err => {\n        dispatch(authFail(err.response));\n        // console.log(err.response)\n        // var data = err.response.data\n        // if (((Object.values(data).length)== 1)) {\n        //   dispatch(authFail(err.response.data));\n        // } else {\n        //   console.log('is not empty ')\n        // }\n\n\n\n\n\n\n\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
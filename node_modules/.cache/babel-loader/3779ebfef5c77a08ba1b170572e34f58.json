{"ast":null,"code":"var _jsxFileName = \"/home/kawsar/incomeexpensesapi-master/orbitplugbackend/src/containers/Checkout.js\";\nimport React, { Component } from \"react\";\nimport { CardElement, injectStripe, Elements, StripeProvider } from \"react-stripe-elements\";\nimport { Button, Container, Divider, Form, Header, Item, Label, Message, Select } from \"semantic-ui-react\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\nimport { authAxios } from \"../utils\";\nimport { checkoutURL, orderSummaryURL, addCouponURL, addressListURL } from \"../constants\";\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      loading: false,\n      error: null,\n      success: false,\n      shippingAddresses: [],\n      billingAddresses: [],\n      selectedBillingAddress: \"\",\n      selectedShippingAddress: \"\"\n    };\n\n    this.submit = ev => {\n      ev.preventDefault();\n      this.setState({\n        loading: true\n      }); // this.props.stripe.createToken().then(result => {\n      //   console.log('result', result)\n      //     this.setState({ error: null });\n      //     const {\n      //       selectedBillingAddress,\n      //       selectedShippingAddress\n      //     } = this.state;\n\n      const {\n        selectedBillingAddress,\n        selectedShippingAddress\n      } = this.state; // console.log('result.token.id', result.token.id)\n\n      authAxios.post(checkoutURL, {\n        // stripeToken: result.token.id,\n        selectedBillingAddress,\n        selectedShippingAddress\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          error: err\n        });\n        console.log(err.response.data);\n      }); // });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      data,\n      error,\n      loading,\n      success,\n      billingAddresses,\n      shippingAddresses,\n      selectedBillingAddress,\n      selectedShippingAddress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      loading: loading,\n      disabled: loading,\n      primary: true,\n      onClick: this.submit,\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Submits\"));\n  }\n\n}\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\nconst WrappedForm = () => /*#__PURE__*/React.createElement(Container, {\n  text: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(StripeProvider, {\n  apiKey: \"null\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }\n}, \"Complete your order\"), /*#__PURE__*/React.createElement(Elements, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(InjectedForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 11\n  }\n})))));\n\nexport default WrappedForm;","map":{"version":3,"sources":["/home/kawsar/incomeexpensesapi-master/orbitplugbackend/src/containers/Checkout.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","Button","Container","Divider","Form","Header","Item","Label","Message","Select","Link","withRouter","NavLink","authAxios","checkoutURL","orderSummaryURL","addCouponURL","addressListURL","CheckoutForm","state","data","loading","error","success","shippingAddresses","billingAddresses","selectedBillingAddress","selectedShippingAddress","submit","ev","preventDefault","setState","post","then","res","props","history","push","catch","err","console","log","response","componentDidMount","render","marginTop","InjectedForm","WrappedForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CardElement,\n  injectStripe,\n  Elements,\n  StripeProvider\n} from \"react-stripe-elements\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Item,\n  Label,\n  Message,\n  Select\n} from \"semantic-ui-react\";\nimport { Link, withRouter,NavLink } from \"react-router-dom\";\nimport { authAxios } from \"../utils\";\nimport {\n  checkoutURL,\n  orderSummaryURL,\n  addCouponURL,\n  addressListURL\n} from \"../constants\";\n\n\nclass CheckoutForm extends Component {\n  state = {\n    data: null,\n    loading: false,\n    error: null,\n    success: false,\n    shippingAddresses: [],\n    billingAddresses: [],\n    selectedBillingAddress: \"\",\n    selectedShippingAddress: \"\"\n  };\n\n  componentDidMount() {\n \n  }\n\n\n\n\n  \n\n\n  submit = ev => {\n    ev.preventDefault();\n\n    this.setState({ loading: true });\n  \n      // this.props.stripe.createToken().then(result => {\n      //   console.log('result', result)\n      //     this.setState({ error: null });\n      //     const {\n      //       selectedBillingAddress,\n      //       selectedShippingAddress\n      //     } = this.state;\n        const {\n          selectedBillingAddress,\n          selectedShippingAddress\n        } = this.state;\n\n          // console.log('result.token.id', result.token.id)\n          authAxios\n        \n            .post(checkoutURL, {\n              // stripeToken: result.token.id,\n              selectedBillingAddress,\n              selectedShippingAddress\n            })\n            .then(res => {\n              this.setState({ loading: false, success: true });\n              this.props.history.push('/');\n            })\n            .catch(err => {\n              this.setState({ loading: false, error: err });\n              console.log (err.response.data)\n            });\n      \n      // });\n \n  };\n\n  render() {\n    const {\n      data,\n      error,\n      loading,\n      success,\n      billingAddresses,\n      shippingAddresses,\n      selectedBillingAddress,\n      selectedShippingAddress\n    } = this.state;\n   \n    return (\n      <div>\n   \n\n\n        <Button\n          loading={loading}\n          disabled={loading}\n          primary\n          onClick={this.submit}\n          style={{ marginTop: \"10px\" }}\n        >\n          Submits\n      </Button>\n\n    \n      </div>\n    );\n  }\n}\n\nconst InjectedForm = withRouter(injectStripe(CheckoutForm));\n\nconst WrappedForm = () => (\n  <Container text>\n    <StripeProvider apiKey='null'>\n      <div>\n        <h1>Complete your order</h1>\n        <Elements>\n          <InjectedForm />\n        </Elements>\n      </div>\n    </StripeProvider>\n  </Container>\n);\n\nexport default WrappedForm;\n"]},"metadata":{},"sourceType":"module"}
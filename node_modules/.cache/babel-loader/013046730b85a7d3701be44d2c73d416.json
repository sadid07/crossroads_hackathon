{"ast":null,"code":"var _jsxFileName = \"/home/kawsar/incomeexpensesapi-master/orbitplug-font-end/src/containers/CategoryProducts.js\";\nimport React, { Component, onMouseOver } from 'react';\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table, Item } from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL, OrderDetailURL } from \"../constants\";\nimport { fetchCart } from \"../store/actions/cart\";\nimport { authAxios } from \"../utils\";\nimport \"./ProductDetail.css\";\nimport $ from \"jquery\";\nimport CKEditor from \"react-ckeditor-component\";\nimport { endpointlocahost } from \"../constants\";\n\nclass CategoryProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: null\n    };\n  }\n\n  // componentDidMount() {\n  //     this.handleFetchItem();\n  // }\n  // handleFetchItem = () => {\n  //     const {\n  //         match: { params }\n  //     } = this.props;\n  //     console.log(this.props)\n  //     this.setState({ loading: true });\n  //     axios\n  //         .get(OrderDetailURL(params.orderdetailID))\n  //         .then(res => {\n  //             console.log('data1', res.data.orderproduct)\n  //             this.setState({ data: res.data.orderproduct, loading: false });\n  //         })\n  //         .catch(err => {\n  //             this.setState({ error: err, loading: false });\n  //             console.log(err)\n  //         });\n  // };\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(CategoryProducts));","map":{"version":3,"sources":["/home/kawsar/incomeexpensesapi-master/orbitplug-font-end/src/containers/CategoryProducts.js"],"names":["React","Component","onMouseOver","NavLink","withRouter","connect","axios","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","Item","productDetailURL","addToCartURL","OrderDetailURL","fetchCart","authAxios","$","CKEditor","endpointlocahost","CategoryProducts","state","loading","error","data","render","console","log","props","mapDispatchToProps","dispatch","refreshCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,OAJJ,EAKIC,IALJ,EAMIC,IANJ,EAOIC,MAPJ,EAQIC,KARJ,EASIC,KATJ,EAUIC,MAVJ,EAWIC,IAXJ,EAYIC,OAZJ,EAaIC,OAbJ,EAcIC,MAdJ,EAeIC,KAfJ,EAgBIC,IAhBJ,QAiBO,mBAjBP;AAkBA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,cAAzC,QAA+D,cAA/D;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAO,qBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,SAASC,gBAAT,QAAiC,cAAjC;;AAEA,MAAMC,gBAAN,SAA+B/B,KAAK,CAACC,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3C+B,KAD2C,GACnC;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,IAAI,EAAE;AAHF,KADmC;AAAA;;AAS3C;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAGA,wBACI,uDAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AAnD0C;;AA2D/C,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,WAAW,EAAE,MAAMD,QAAQ,CAACf,SAAS,EAAV;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAetB,UAAU,CACrBC,OAAO,CACH,IADG,EAEHmC,kBAFG,CAAP,CAGET,gBAHF,CADqB,CAAzB","sourcesContent":["import React, { Component, onMouseOver } from 'react'\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Button,\n    Card,\n    Dimmer,\n    Divider,\n    Form,\n    Grid,\n    Header,\n    Image,\n    Label,\n    Loader,\n    Menu,\n    Message,\n    Segment,\n    Select,\n    Table,\n    Item\n} from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL, OrderDetailURL } from \"../constants\";\nimport { fetchCart } from \"../store/actions/cart\";\nimport { authAxios } from \"../utils\";\nimport \"./ProductDetail.css\"\nimport $ from \"jquery\";\nimport CKEditor from \"react-ckeditor-component\";\n\nimport { endpointlocahost } from \"../constants\";\n\nclass CategoryProducts extends React.Component {\n    state = {\n        loading: false,\n        error: null,\n        data: null\n\n    };\n\n\n    // componentDidMount() {\n    //     this.handleFetchItem();\n\n    // }\n\n    // handleFetchItem = () => {\n    //     const {\n    //         match: { params }\n    //     } = this.props;\n    //     console.log(this.props)\n    //     this.setState({ loading: true });\n    //     axios\n    //         .get(OrderDetailURL(params.orderdetailID))\n    //         .then(res => {\n    //             console.log('data1', res.data.orderproduct)\n    //             this.setState({ data: res.data.orderproduct, loading: false });\n    //         })\n    //         .catch(err => {\n    //             this.setState({ error: err, loading: false });\n    //             console.log(err)\n    //         });\n    // };\n\n\n\n\n\n    render() {\n        const { data } = this.state;\n        console.log(this.props)\n\n\n        return (\n            <>\n\n                <div className='container-fluid'>\n                   \n                       \n                </div>\n            </>\n\n        );\n    }\n\n\n\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        refreshCart: () => dispatch(fetchCart())\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(CategoryProducts)\n);\n\n"]},"metadata":{},"sourceType":"module"}
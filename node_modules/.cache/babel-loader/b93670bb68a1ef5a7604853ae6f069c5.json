{"ast":null,"code":"var _jsxFileName = \"/home/kawsar/incomeexpensesapi-master/orbitplugbackend/src/containers/Login.js\";\nimport React from \"react\";\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect, Link } from \"react-router-dom\";\nimport { authLogin } from \"../store/actions/auth\";\nimport \"./Login.css\";\nimport { GoogleLogin } from 'react-google-login';\nimport axios from \"axios\"; // import * as actionTypes from \"./actionTypes\";\n\nimport { authSuccess, authFail, checkAuthTimeout } from '../store/actions/auth';\nimport { endpoint, endpointauth } from \"../constants\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      formData: {\n        email: \"\"\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.login(email, password);\n    };\n\n    this.responseGoogle = response => {\n      this.setState({\n        formData: response.tokenObj.id_token,\n        loading: false\n      });\n      const {\n        formData\n      } = this.state;\n      console.log('token', formData);\n      axios.post('http://127.0.0.1:8000/social_auth/google/', { ...formData\n      }).then(res => {\n        const token = res.data.tokens.access;\n        console.log((res, '..................................................')); //  console.log((token));\n        //  const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        //  localStorage.setItem(\"token\", token);\n        //  localStorage.setItem(\"expirationDate\", expirationDate);\n      }).catch(err => {\n        console.log(err);\n      }); //  axios\n      //    .post('http://127.0.0.1:8000/social_auth/google/')\n      //    .then(res => {\n      //      this.setState({ formData: res.data.results[0], loading: false });\n      //      console.log('daaa ', res.data)\n      //    })\n      //    .catch(err => {\n      //      this.setState({ error: err, loading: false });\n      //      console.log(err)\n      //    });\n    };\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      token\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n\n    if (token) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: \"100vh\"\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, this.props.error.message), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      style: {\n        borderRadius: \"18px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, \"Log-in to your account\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      value: email,\n      name: \"email\",\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      value: password,\n      name: \"password\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      loading: loading,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"356944659457-dmhr16e2csrkouh8r3bmgisaggelk51j.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"New to us? \", /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 26\n      }\n    }, \"Sign Up\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(authLogin(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/home/kawsar/incomeexpensesapi-master/orbitplugbackend/src/containers/Login.js"],"names":["React","Button","Form","Grid","Header","Message","Segment","connect","NavLink","Redirect","Link","authLogin","GoogleLogin","axios","authSuccess","authFail","checkAuthTimeout","endpoint","endpointauth","LoginForm","Component","state","email","password","formData","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","login","responseGoogle","response","tokenObj","id_token","loading","console","log","post","then","res","token","data","tokens","access","catch","err","render","error","height","maxWidth","message","borderRadius","textAlign","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect,Link } from \"react-router-dom\";\nimport { authLogin } from \"../store/actions/auth\";\nimport \"./Login.css\"\nimport { GoogleLogin } from 'react-google-login';\nimport axios from \"axios\";\n// import * as actionTypes from \"./actionTypes\";\nimport { authSuccess, authFail, checkAuthTimeout} from '../store/actions/auth'\nimport { endpoint, endpointauth } from \"../constants\";\nclass LoginForm extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    formData: {\n      email: \"\",\n\n\n    },\n  };\n\n \n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.props.login(email, password);\n  };\n\n   responseGoogle = (response) => {\n     this.setState({ formData: response.tokenObj.id_token, loading: false });\n     const { formData } = this.state;\n\n     console.log('token', formData);\n\n\n     axios\n       .post('http://127.0.0.1:8000/social_auth/google/',{\n        ...formData\n       \n       })\n       .then(res => {\n         const token = res.data.tokens.access;\n         console.log((res,'..................................................'));\n        //  console.log((token));\n        //  const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        //  localStorage.setItem(\"token\", token);\n        //  localStorage.setItem(\"expirationDate\", expirationDate);\n    \n       })\n       .catch(err => {\n         console.log(err)\n        \n       });\n\n  \n\n\n\n      //  axios\n\n      //    .post('http://127.0.0.1:8000/social_auth/google/')\n\n\n\n      //    .then(res => {\n      //      this.setState({ formData: res.data.results[0], loading: false });\n\n      //      console.log('daaa ', res.data)\n\n\n      //    })\n      //    .catch(err => {\n      //      this.setState({ error: err, loading: false });\n      //      console.log(err)\n      //    });\n     \n\n\n\n\n\n\n\n  }\n  render() {\n    const { error, loading, token } = this.props;\n    const { email, password } = this.state;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <>\n\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n         \n          {error && <p>{this.props.error.message}</p>}\n\n          <React.Fragment >\n            <Form size=\"large\" onSubmit={this.handleSubmit}>\n\n               \n\n                <Segment stacked style={{borderRadius: \"18px\"}}>\n\n                  <br></br>\n                  <h4 style={{ textAlign: \"center\" }}>Log-in to your account</h4>\n                  <br></br>\n                  \n\n\n\n                <Form.Input\n                  onChange={this.handleChange}\n                  value={email}\n                  name=\"email\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"email\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  fluid\n                  value={password}\n                  name=\"password\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n\n                <Button\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  loading={loading}\n                  disabled={loading}\n                >\n                  Login\n                </Button>\n                  <br></br>\n               \n\n\n\n\n\n                  <GoogleLogin\n                    clientId=\"356944659457-dmhr16e2csrkouh8r3bmgisaggelk51j.apps.googleusercontent.com\"\n                    buttonText=\"Login\"\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                  />\n\n\n\n\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <NavLink to=\"/signup\">Sign Up</NavLink>\n            </Message>\n          </React.Fragment>\n        </Grid.Column>\n      </Grid>\n\n\n\n\n\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(authLogin(email, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}
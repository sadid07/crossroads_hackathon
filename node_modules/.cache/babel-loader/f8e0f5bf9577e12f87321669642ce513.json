{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport \"./styles/global.css\";\n\nconst DropdownMultiple = ({\n  placeholder = \"Search\",\n  isSingle = false,\n  labelName = \"title\",\n  selectedList = [],\n  selectedlabelName = \"title\",\n  toggleItem = {},\n  list = [],\n  inputChanged = {},\n  searchKey = \"\",\n  tagColor = \"#0074D9\",\n  selectedDropdownColor = \"#0074D9\"\n}) => {\n  const [listOpen, setListOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [internalSelectedList, setInternanSelectedList] = useState([]);\n  const [internalList, setInternalList] = useState([]);\n  useEffect(() => {\n    let tmpSelectedList = [];\n    tmpSelectedList = [...internalSelectedList];\n    tmpSelectedList = tmpSelectedList.concat(selectedList);\n\n    if (tmpSelectedList.length > 0) {\n      setInternanSelectedList(new Set(tmpSelectedList));\n    }\n  }, []);\n  useEffect(() => {\n    setInternalList(list);\n  }, [list]);\n  useEffect(() => {\n    if (searchKey) {\n      changeListValueBasedOnSearch(searchKey);\n      setInput(searchKey);\n    }\n  }, [searchKey]);\n\n  const changeListValueBasedOnSearch = value => {\n    if (value) {\n      let tmpArray = [];\n      list.filter(val => {\n        if (val[labelName].toUpperCase().includes(value.toUpperCase())) {\n          tmpArray = [...tmpArray, val];\n        }\n      });\n      setInternalList(tmpArray);\n    } else {\n      setInternalList(list);\n    }\n  };\n\n  const close = timeOut => {\n    setListOpen(false);\n    window.removeEventListener(\"mousedown\", close);\n  };\n\n  const toggleList = () => {\n    setListOpen(!listOpen);\n  };\n\n  const handleInputChange = evt => {\n    let inputValue = evt.target.value;\n    changeListValueBasedOnSearch(inputValue);\n    setListOpen(true);\n    setInput(inputValue);\n    inputChanged(inputValue);\n  };\n\n  const handleRemoveItem = index => {\n    return () => {\n      let tmpArray = internalSelectedList.filter((item, i) => i !== index);\n      setInternanSelectedList(tmpArray);\n      toggleItem(tmpArray);\n    };\n  };\n\n  const dropDownSelectedItem = item => {\n    let totalSelectedItem = [...internalSelectedList];\n\n    if (isSingle) {\n      totalSelectedItem = [item];\n      setInternanSelectedList(totalSelectedItem);\n    } else if (!selectedClassname(item)) {\n      totalSelectedItem.push(item);\n      setInternanSelectedList(totalSelectedItem);\n    } else {\n      totalSelectedItem.splice(totalSelectedItem.indexOf(item), 1);\n      setInternanSelectedList(totalSelectedItem);\n    }\n\n    setInput(\"\");\n    changeListValueBasedOnSearch(\"\");\n    toggleItem(totalSelectedItem);\n  };\n\n  const renderDropDownFn = internalList => {\n    return React.createElement(\"div\", null, React.createElement(\"ul\", {\n      className: \"dd-list\",\n      onClick: e => e.stopPropagation(),\n      onMouseEnter: () => {\n        window.removeEventListener(\"mousedown\", close);\n      },\n      onMouseLeave: () => {\n        window.addEventListener(\"mousedown\", close);\n      }\n    }, internalList.map((item, index) => renderDropDownSelectedItem(item, index))));\n  };\n\n  const selectedClassname = item => {\n    return internalSelectedList.some(internalList => internalList[labelName].toUpperCase() === item[labelName].toUpperCase());\n  };\n\n  const renderDropDownSelectedItem = (item, index) => {\n    return React.createElement(\"div\", {\n      key: index\n    }, React.createElement(\"li\", {\n      className: selectedClassname(item) ? \"dd-list-item selected\" : \"dd-list-item\",\n      style: selectedClassname(item) ? seletedBackgroundColor : {},\n      key: index,\n      onClick: () => {\n        dropDownSelectedItem(item);\n      }\n    }, item[labelName]));\n  };\n\n  const seletedBackgroundColor = {\n    backgroundColor: selectedDropdownColor\n  };\n  const styles = {\n    container: {\n      padding: \"2px\",\n      margin: \"5px\"\n    },\n    items: {\n      color: \"white\",\n      display: \"inline-block\",\n      padding: \"2px\",\n      border: `1px solid ${tagColor}`,\n      backgroundColor: tagColor,\n      borderRadius: \"5px\",\n      margin: \"5px\",\n      cursor: \"pointer\"\n    },\n    input: {\n      outline: \"none\",\n      border: \"none\",\n      fontSize: \"12px\"\n    }\n  };\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"col-12\"\n  }, React.createElement(\"div\", {\n    className: \"dd-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"dd-header\",\n    onClick: () => toggleList(),\n    onMouseEnter: () => {\n      window.removeEventListener(\"mousedown\", close);\n    },\n    onMouseLeave: () => {\n      window.addEventListener(\"mousedown\", close);\n    }\n  }, React.createElement(\"label\", {\n    style: {\n      marginTop: \"5px\"\n    }\n  }, React.createElement(\"ul\", {\n    style: styles\n  }, internalSelectedList.map((item, i) => React.createElement(\"li\", {\n    key: i,\n    style: styles.items,\n    onClick: handleRemoveItem(i)\n  }, item[selectedlabelName], React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"5px\",\n      color: \"white\"\n    }\n  }, \"X\"))), React.createElement(\"input\", {\n    className: \"col-12 dd-header dd-wrapper\",\n    placeholder: placeholder,\n    style: styles.input,\n    value: input,\n    onChange: handleInputChange\n  })))), listOpen ? renderDropDownFn(internalList) : null)));\n};\n\nexport default DropdownMultiple;","map":{"version":3,"sources":["/home/kawsar/crossroads/crossroads-font-end/node_modules/react-drop-down-searcher/dist/ReactDropDown.js"],"names":["React","useEffect","useState","DropdownMultiple","placeholder","isSingle","labelName","selectedList","selectedlabelName","toggleItem","list","inputChanged","searchKey","tagColor","selectedDropdownColor","listOpen","setListOpen","input","setInput","internalSelectedList","setInternanSelectedList","internalList","setInternalList","tmpSelectedList","concat","length","Set","changeListValueBasedOnSearch","value","tmpArray","filter","val","toUpperCase","includes","close","timeOut","window","removeEventListener","toggleList","handleInputChange","evt","inputValue","target","handleRemoveItem","index","item","i","dropDownSelectedItem","totalSelectedItem","selectedClassname","push","splice","indexOf","renderDropDownFn","createElement","className","onClick","e","stopPropagation","onMouseEnter","onMouseLeave","addEventListener","map","renderDropDownSelectedItem","some","key","style","seletedBackgroundColor","backgroundColor","styles","container","padding","margin","items","color","display","border","borderRadius","cursor","outline","fontSize","marginTop","paddingLeft","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles/global.css\";\n\nconst DropdownMultiple = ({\n  placeholder = \"Search\",\n  isSingle = false,\n  labelName = \"title\",\n  selectedList = [],\n  selectedlabelName = \"title\",\n  toggleItem = {},\n  list = [],\n  inputChanged = {},\n  searchKey = \"\",\n  tagColor = \"#0074D9\",\n  selectedDropdownColor = \"#0074D9\"\n}) => {\n  const [listOpen, setListOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [internalSelectedList, setInternanSelectedList] = useState([]);\n  const [internalList, setInternalList] = useState([]);\n  useEffect(() => {\n    let tmpSelectedList = [];\n    tmpSelectedList = [...internalSelectedList];\n    tmpSelectedList = tmpSelectedList.concat(selectedList);\n\n    if (tmpSelectedList.length > 0) {\n      setInternanSelectedList(new Set(tmpSelectedList));\n    }\n  }, []);\n  useEffect(() => {\n    setInternalList(list);\n  }, [list]);\n  useEffect(() => {\n    if (searchKey) {\n      changeListValueBasedOnSearch(searchKey);\n      setInput(searchKey);\n    }\n  }, [searchKey]);\n\n  const changeListValueBasedOnSearch = value => {\n    if (value) {\n      let tmpArray = [];\n      list.filter(val => {\n        if (val[labelName].toUpperCase().includes(value.toUpperCase())) {\n          tmpArray = [...tmpArray, val];\n        }\n      });\n      setInternalList(tmpArray);\n    } else {\n      setInternalList(list);\n    }\n  };\n\n  const close = timeOut => {\n    setListOpen(false);\n    window.removeEventListener(\"mousedown\", close);\n  };\n\n  const toggleList = () => {\n    setListOpen(!listOpen);\n  };\n\n  const handleInputChange = evt => {\n    let inputValue = evt.target.value;\n    changeListValueBasedOnSearch(inputValue);\n    setListOpen(true);\n    setInput(inputValue);\n    inputChanged(inputValue);\n  };\n\n  const handleRemoveItem = index => {\n    return () => {\n      let tmpArray = internalSelectedList.filter((item, i) => i !== index);\n      setInternanSelectedList(tmpArray);\n      toggleItem(tmpArray);\n    };\n  };\n\n  const dropDownSelectedItem = item => {\n    let totalSelectedItem = [...internalSelectedList];\n\n    if (isSingle) {\n      totalSelectedItem = [item];\n      setInternanSelectedList(totalSelectedItem);\n    } else if (!selectedClassname(item)) {\n      totalSelectedItem.push(item);\n      setInternanSelectedList(totalSelectedItem);\n    } else {\n      totalSelectedItem.splice(totalSelectedItem.indexOf(item), 1);\n      setInternanSelectedList(totalSelectedItem);\n    }\n\n    setInput(\"\");\n    changeListValueBasedOnSearch(\"\");\n    toggleItem(totalSelectedItem);\n  };\n\n  const renderDropDownFn = internalList => {\n    return React.createElement(\"div\", null, React.createElement(\"ul\", {\n      className: \"dd-list\",\n      onClick: e => e.stopPropagation(),\n      onMouseEnter: () => {\n        window.removeEventListener(\"mousedown\", close);\n      },\n      onMouseLeave: () => {\n        window.addEventListener(\"mousedown\", close);\n      }\n    }, internalList.map((item, index) => renderDropDownSelectedItem(item, index))));\n  };\n\n  const selectedClassname = item => {\n    return internalSelectedList.some(internalList => internalList[labelName].toUpperCase() === item[labelName].toUpperCase());\n  };\n\n  const renderDropDownSelectedItem = (item, index) => {\n    return React.createElement(\"div\", {\n      key: index\n    }, React.createElement(\"li\", {\n      className: selectedClassname(item) ? \"dd-list-item selected\" : \"dd-list-item\",\n      style: selectedClassname(item) ? seletedBackgroundColor : {},\n      key: index,\n      onClick: () => {\n        dropDownSelectedItem(item);\n      }\n    }, item[labelName]));\n  };\n\n  const seletedBackgroundColor = {\n    backgroundColor: selectedDropdownColor\n  };\n  const styles = {\n    container: {\n      padding: \"2px\",\n      margin: \"5px\"\n    },\n    items: {\n      color: \"white\",\n      display: \"inline-block\",\n      padding: \"2px\",\n      border: `1px solid ${tagColor}`,\n      backgroundColor: tagColor,\n      borderRadius: \"5px\",\n      margin: \"5px\",\n      cursor: \"pointer\"\n    },\n    input: {\n      outline: \"none\",\n      border: \"none\",\n      fontSize: \"12px\"\n    }\n  };\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"col-12\"\n  }, React.createElement(\"div\", {\n    className: \"dd-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"dd-header\",\n    onClick: () => toggleList(),\n    onMouseEnter: () => {\n      window.removeEventListener(\"mousedown\", close);\n    },\n    onMouseLeave: () => {\n      window.addEventListener(\"mousedown\", close);\n    }\n  }, React.createElement(\"label\", {\n    style: {\n      marginTop: \"5px\"\n    }\n  }, React.createElement(\"ul\", {\n    style: styles\n  }, internalSelectedList.map((item, i) => React.createElement(\"li\", {\n    key: i,\n    style: styles.items,\n    onClick: handleRemoveItem(i)\n  }, item[selectedlabelName], React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"5px\",\n      color: \"white\"\n    }\n  }, \"X\"))), React.createElement(\"input\", {\n    className: \"col-12 dd-header dd-wrapper\",\n    placeholder: placeholder,\n    style: styles.input,\n    value: input,\n    onChange: handleInputChange\n  })))), listOpen ? renderDropDownFn(internalList) : null)));\n};\n\nexport default DropdownMultiple;"]},"metadata":{},"sourceType":"module"}
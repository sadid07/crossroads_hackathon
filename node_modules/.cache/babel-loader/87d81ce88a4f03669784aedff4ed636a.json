{"ast":null,"code":"var _jsxFileName = \"/home/kawsar/teast/incomeexpensesapi-master (copy)/BorbitplugBackEnd/src/containers/AddressForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { addressCreateURL, addressUpdateURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      console.log(this.props, './//////////////////////');\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      console.log(this.props, './//////////////////////');\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Save\"));\n  }\n\n}\n\nexport default AddressForm;","map":{"version":3,"sources":["/home/kawsar/teast/incomeexpensesapi-master (copy)/BorbitplugBackEnd/src/containers/AddressForm.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","addressCreateURL","addressUpdateURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","apartment_address","country","default","id","street_address","user","zip","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","console","log","post","then","res","callback","catch","err","put","componentDidMount","address","render","countries","length","JSON","stringify"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,OAJJ,EAKIC,IALJ,EAMIC,IANJ,EAOIC,MAPJ,EAQIC,KARJ,EASIC,KATJ,EAUIC,MAVJ,EAWIC,IAXJ,EAYIC,OAZJ,EAaIC,OAbJ,EAcIC,MAdJ,EAeIC,KAfJ,QAgBO,mBAhBP;AAkBA,SACIC,gBADJ,EAEIC,gBAFJ,QAIO,cAJP;AAKA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,WAAN,SAA0BvB,KAAK,CAACwB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,YAAY,EAAE,EADR;AAENC,QAAAA,iBAAiB,EAAE,EAFb;AAGNC,QAAAA,OAAO,EAAE,EAHH;AAINC,QAAAA,OAAO,EAAE,KAJH;AAKNC,QAAAA,EAAE,EAAE,EALE;AAMNC,QAAAA,cAAc,EAAE,EANV;AAONC,QAAAA,IAAI,EAAE,CAPA;AAQNC,QAAAA,GAAG,EAAE;AARC,OAHN;AAaJC,MAAAA,MAAM,EAAE,KAbJ;AAcJC,MAAAA,OAAO,EAAE;AAdL,KAD8B;;AAAA,SAyBtCC,mBAzBsC,GAyBhB,MAAM;AACxB,YAAM;AAAEX,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACpB,GAAGZ,QADiB;AAEpBI,QAAAA,OAAO,EAAE,CAACJ,QAAQ,CAACI;AAFC,OAAxB;AAIA,WAAKS,QAAL,CAAc;AACVb,QAAAA,QAAQ,EAAEY;AADA,OAAd;AAGH,KAlCqC;;AAAA,SAoCtCE,YApCsC,GAoCvBC,CAAC,IAAI;AAChB,YAAM;AAAEf,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACpB,GAAGZ,QADiB;AAEpB,SAACe,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFN,OAAxB;AAIA,WAAKL,QAAL,CAAc;AACVb,QAAAA,QAAQ,EAAEY;AADA,OAAd;AAGH,KA7CqC;;AAAA,SA+CtCO,kBA/CsC,GA+CjB,CAACJ,CAAD,EAAI;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AACzC,YAAM;AAAElB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACpB,GAAGZ,QADiB;AAEpB,SAACiB,IAAD,GAAQC;AAFY,OAAxB;AAIA,WAAKL,QAAL,CAAc;AACVb,QAAAA,QAAQ,EAAEY;AADA,OAAd;AAGH,KAxDqC;;AAAA,SA0DtCQ,YA1DsC,GA0DvBL,CAAC,IAAI;AAChB,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAM,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;;AACA,UAAID,QAAQ,KAAK7B,WAAjB,EAA8B;AAC1B,aAAK+B,mBAAL;AACH,OAFD,MAEO;AACH,aAAKC,mBAAL;AACH;AACJ,KAnEqC;;AAAA,SAqEtCA,mBArEsC,GAqEhB,MAAM;AACxB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKJ,KAApC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAAuB,0BAAvB;AACA,YAAM;AAAEvB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACAL,MAAAA,SAAS,CACJsC,IADL,CACUxC,gBADV,EAC4B,EACpB,GAAGU,QADiB;AAEpBO,QAAAA,IAAI,EAAEmB,MAFc;AAGpBzB,QAAAA,YAAY,EAAE0B,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHlC,OAD5B,EAMKI,IANL,CAMUC,GAAG,IAAI;AACT,aAAKnB,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAAE,KADE;AAEVC,UAAAA,OAAO,EAAE,IAFC;AAGVV,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHA,SAAd;AAKA,aAAKmB,KAAL,CAAWU,QAAX;AACH,OAbL,EAcKC,KAdL,CAcWC,GAAG,IAAI;AACV,aAAKtB,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAEqC;AAAT,SAAd;AACH,OAhBL;AAiBH,KA1FqC;;AAAA,SA4FtCX,mBA5FsC,GA4FhB,MAAM;AACxB,YAAM;AAAEE,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKJ,KAApC;AACA,YAAM;AAAEvB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAAwB,0BAAxB;AAEA/B,MAAAA,SAAS,CACJ4C,GADL,CACS7C,gBAAgB,CAACS,QAAQ,CAACK,EAAV,CADzB,EACwC,EAChC,GAAGL,QAD6B;AAEhCO,QAAAA,IAAI,EAAEmB,MAF0B;AAGhCzB,QAAAA,YAAY,EAAE0B,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHtB,OADxC,EAMKI,IANL,CAMUC,GAAG,IAAI;AACT,aAAKnB,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAAE,KADE;AAEVC,UAAAA,OAAO,EAAE,IAFC;AAGVV,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHA,SAAd;AAKA,aAAKmB,KAAL,CAAWU,QAAX;AACH,OAbL,EAcKC,KAdL,CAcWC,GAAG,IAAI;AACV,aAAKtB,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAEqC;AAAT,SAAd;AACH,OAhBL;AAiBH,KAlHqC;AAAA;;AAkBtCE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,OAAF;AAAWhB,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;;AACA,QAAID,QAAQ,KAAK7B,WAAjB,EAA8B;AAC1B,WAAKoB,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEsC;AAAZ,OAAd;AACH;AACJ;;AA6FDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKjB,KAA3B;AACA,UAAM;AAAEzB,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBU,MAAAA,OAAnB;AAA4BD,MAAAA;AAA5B,QAAuC,KAAKZ,KAAlD;AACA,wBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKuB,YAArB;AAAmC,MAAA,OAAO,EAAEV,OAA5C;AAAqD,MAAA,KAAK,EAAEZ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,WAAW,EAAC,gBAHhB;AAII,MAAA,QAAQ,EAAE,KAAKgB,YAJnB;AAKI,MAAA,KAAK,EAAEd,QAAQ,CAACM,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,mBAFT;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,QAAQ,EAAE,KAAKQ,YAJnB;AAKI,MAAA,KAAK,EAAEd,QAAQ,CAACE,iBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEsC,SAAS,CAACC,MAAV,GAAmB,CADhC;AAEI,MAAA,KAAK,MAFT;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,OAAO,EAAED,SALb;AAMI,MAAA,IAAI,EAAC,SANT;AAOI,MAAA,WAAW,EAAC,SAPhB;AAQI,MAAA,QAAQ,EAAE,KAAKrB,kBARnB;AASI,MAAA,KAAK,EAAEnB,QAAQ,CAACG,OATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,eA4BI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,QAAQ,EAAE,KAAKW,YAJnB;AAKI,MAAA,KAAK,EAAEd,QAAQ,CAACQ,GALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,eAmCI,oBAAC,IAAD,CAAM,QAAN;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAC,gCAFV;AAGI,MAAA,QAAQ,EAAE,KAAKG,mBAHnB;AAII,MAAA,OAAO,EAAEX,QAAQ,CAACI,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCJ,EAyCKM,OAAO,iBACJ,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,MAAM,EAAC,UAAxB;AAAmC,MAAA,OAAO,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CR,EA4CKZ,KAAK,iBACF,oBAAC,OAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,MAAM,EAAC,oBAFX;AAGI,MAAA,OAAO,EAAE4C,IAAI,CAACC,SAAL,CAAe7C,KAAf,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CR,eAmDI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,QAAQ,EAAEW,MAAvB;AAA+B,MAAA,OAAO,EAAEA,MAAxC;AAAgD,MAAA,OAAO,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ,CADJ;AAyDH;;AAhLqC;;AAqL1C,eAAed,WAAf","sourcesContent":["\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n    Button,\n    Card,\n    Dimmer,\n    Divider,\n    Form,\n    Grid,\n    Header,\n    Image,\n    Label,\n    Loader,\n    Menu,\n    Message,\n    Segment,\n    Select,\n    Table\n} from \"semantic-ui-react\";\n\nimport {\n    addressCreateURL,\n    addressUpdateURL,\n\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n    state = {\n        error: null,\n        loading: false,\n        formData: {\n            address_type: \"\",\n            apartment_address: \"\",\n            country: \"\",\n            default: false,\n            id: \"\",\n            street_address: \"\",\n            user: 1,\n            zip: \"\"\n        },\n        saving: false,\n        success: false\n    };\n\n    componentDidMount() {\n        const { address, formType } = this.props;\n        if (formType === UPDATE_FORM) {\n            this.setState({ formData: address });\n        }\n    }\n\n    handleToggleDefault = () => {\n        const { formData } = this.state;\n        const updatedFormdata = {\n            ...formData,\n            default: !formData.default\n        };\n        this.setState({\n            formData: updatedFormdata\n        });\n    };\n\n    handleChange = e => {\n        const { formData } = this.state;\n        const updatedFormdata = {\n            ...formData,\n            [e.target.name]: e.target.value\n        };\n        this.setState({\n            formData: updatedFormdata\n        });\n    };\n\n    handleSelectChange = (e, { name, value }) => {\n        const { formData } = this.state;\n        const updatedFormdata = {\n            ...formData,\n            [name]: value\n        };\n        this.setState({\n            formData: updatedFormdata\n        });\n    };\n\n    handleSubmit = e => {\n        this.setState({ saving: true });\n        e.preventDefault();\n        const { formType } = this.props;\n        if (formType === UPDATE_FORM) {\n            this.handleUpdateAddress();\n        } else {\n            this.handleCreateAddress();\n        }\n    };\n\n    handleCreateAddress = () => {\n        const { userID, activeItem } = this.props;\n        console.log(this.props,'.///////////////////////')\n        const { formData } = this.state;\n        authAxios\n            .post(addressCreateURL, {\n                ...formData,\n                user: userID,\n                address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n            })\n            .then(res => {\n                this.setState({\n                    saving: false,\n                    success: true,\n                    formData: { default: false }\n                });\n                this.props.callback();\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n\n    handleUpdateAddress = () => {\n        const { userID, activeItem } = this.props;\n        const { formData } = this.state;\n        console.log(this.props, './//////////////////////')\n\n        authAxios\n            .put(addressUpdateURL(formData.id), {\n                ...formData,\n                user: userID,\n                address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n            })\n            .then(res => {\n                this.setState({\n                    saving: false,\n                    success: true,\n                    formData: { default: false }\n                });\n                this.props.callback();\n            })\n            .catch(err => {\n                this.setState({ error: err });\n            });\n    };\n \n    render() {\n        const { countries } = this.props;\n        const { error, formData, success, saving } = this.state;\n        return (\n            <Form onSubmit={this.handleSubmit} success={success} error={error}>\n                <Form.Input\n                    required\n                    name=\"street_address\"\n                    placeholder=\"Street address\"\n                    onChange={this.handleChange}\n                    value={formData.street_address}\n                />\n                <Form.Input\n                    required\n                    name=\"apartment_address\"\n                    placeholder=\"Apartment address\"\n                    onChange={this.handleChange}\n                    value={formData.apartment_address}\n                />\n                <Form.Field required>\n                    <Select\n                        loading={countries.length < 1}\n                        fluid\n                        clearable\n                        search\n                        options={countries}\n                        name=\"country\"\n                        placeholder=\"Country\"\n                        onChange={this.handleSelectChange}\n                        value={formData.country}\n                    />\n                </Form.Field>\n                <Form.Input\n                    required\n                    name=\"zip\"\n                    placeholder=\"Zip code\"\n                    onChange={this.handleChange}\n                    value={formData.zip}\n                />\n                <Form.Checkbox\n                    name=\"default\"\n                    label=\"Make this the default address?\"\n                    onChange={this.handleToggleDefault}\n                    checked={formData.default}\n                />\n                {success && (\n                    <Message success header=\"Success!\" content=\"Your address was saved\" />\n                )}\n                {error && (\n                    <Message\n                        error\n                        header=\"There was an error\"\n                        content={JSON.stringify(error)}\n                    />\n                )}\n                <Form.Button disabled={saving} loading={saving} primary>\n                    Save\n        </Form.Button>\n            </Form>\n        );\n    }\n}\n\n\n\nexport default AddressForm;\n\n\n"]},"metadata":{},"sourceType":"module"}
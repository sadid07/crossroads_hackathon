{"ast":null,"code":"import axios from\"axios\";import*as actionTypes from\"./actionTypes\";import{endpoint,endpointauth}from\"../../constants\";export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token){return{type:actionTypes.AUTH_SUCCESS,token:token};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem(\"token\");localStorage.removeItem(\"expirationDate\");return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var authLogin=function authLogin(email,password){return function(dispatch){dispatch(authStart());axios.post(\"\".concat(endpointauth,\"/auth/login/\"),{email:email,password:password}).then(function(res){var token=res.data.tokens.access;console.log(res);console.log(token);var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());axios.post(\"\".concat(endpointauth,\"/auth/register/\"),{username:username,email:email,password1:password1,password2:password2}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem(\"token\");if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem(\"expirationDate\"));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["/home/kawsar/teast/incomeexpensesapi-master (copy)/BorbitplugBackEnd/src/store/actions/auth.js"],"names":["axios","actionTypes","endpoint","endpointauth","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","email","password","post","then","res","data","tokens","access","console","log","expirationDate","Date","getTime","setItem","catch","err","authSignup","username","password1","password2","key","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { endpoint, endpointauth } from \"../../constants\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${endpointauth}/auth/login/`, {\n        email: email,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.tokens.access;\n        console.log((res));\n        console.log((token));\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${endpointauth}/auth/register/`, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}